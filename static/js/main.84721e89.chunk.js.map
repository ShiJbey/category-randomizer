{"version":3,"sources":["App.module.scss","components/CategoryOption.module.scss","components/CategoryOptionList.module.scss","components/OpenConfigModal.module.scss","components/SaveConfigModal.module.scss","components/AboutModal.module.scss","components/CategoryOption.tsx","components/CategoryOptionList.tsx","components/OpenConfigModal.tsx","components/SaveConfigModal.tsx","components/AboutModal.tsx","components/HelpModal.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","CategoryOption","state","editable","props","className","classNames","styles","category_option","deselected","this","option","selected","select_checkbox","type","checked","onChange","event","handleSelectionUpdate","target","option_text","onClick","setEditable","onBlur","handleTextUpdate","innerText","contentEditable","suppressContentEditableWarning","text","delete_button","deleteOption","icon","faTimes","setState","onUpdate","onDelete","React","Component","CategoryOptionList","name","options","onRemove","useState","titleEditable","setTitleEditable","updateOption","changes","index","updatedOptions","category_option_list","title_bar","title","onDoubleClick","newName","Button","variant","remove_category_btn","options_list","map","splice","substring","push","addOption","faPlus","OpenConfigModal","entryNames","show","onOpen","onClose","closeModal","Modal","onHide","Header","Title","Body","modal_body","saved_config_list","length","entry_row","entryName","size","no_config_text","Footer","SaveConfigModal","onSubmit","Date","toISOString","setEntryName","save_name_input","value","defaultValue","AboutModal","centered","about_text","href","rel","HelpModal","SAVED_CONFIG_NAMES_KEY","sampleCategories","categories","category","selectedOptions","filter","selection","_","sample","App","config","sampleData","selections","showOpenModal","showSaveModal","showAboutModal","showHelpModal","savedConfigs","app","toolbar","ButtonToolbar","ButtonGroup","showSaveConfigModal","faSave","showOpenConfigModal","faFolderOpen","faQuestion","faInfoCircle","randomize_all_btn","randomizeAll","btn_label","faRandom","category_column","randomize_btn","randomize","handleOptionsUpdate","removeCategory","add_vategory_btn","addCategory","deleteFromStorage","loadFromStorage","hideOpenConfigModal","saveToStorage","hideSaveConfigModal","hideAboutModal","hideHelpModal","console","log","entryNameRecord","window","localStorage","getItem","JSON","parse","entry","error","setItem","stringify","savedEntryNames","getSavedEntryNames","includes","removeItem","updatedConfigNames","updatedSelections","setSelections","newSelection","updatedCategories","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84721e89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1aIzO\",\"categories\":\"App_categories__3AO9V\",\"randomize_all_btn\":\"App_randomize_all_btn__3reYp\",\"btn_label\":\"App_btn_label__3olCw\",\"randomize_btn\":\"App_randomize_btn__GjS_U\",\"add_vategory_btn\":\"App_add_vategory_btn__1UJVT\",\"selection\":\"App_selection__2bOf2\",\"toolbar\":\"App_toolbar__3Nkjy\",\"category_column\":\"App_category_column__3tQ3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category_option\":\"CategoryOption_category_option__DH1KU\",\"deselected\":\"CategoryOption_deselected__3a_G_\",\"option_text\":\"CategoryOption_option_text__1CCjb\",\"delete_button\":\"CategoryOption_delete_button__1Hf74\",\"select_checkbox\":\"CategoryOption_select_checkbox__1F7lH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category_option_list\":\"CategoryOptionList_category_option_list__3Kj6u\",\"title_bar\":\"CategoryOptionList_title_bar__1rFU0\",\"title\":\"CategoryOptionList_title__3Fauo\",\"options_list\":\"CategoryOptionList_options_list___9Qvd\",\"remove_category_btn\":\"CategoryOptionList_remove_category_btn__14aij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_config_text\":\"OpenConfigModal_no_config_text__2-Hyi\",\"entry_row\":\"OpenConfigModal_entry_row__3cJ_g\",\"modal_body\":\"OpenConfigModal_modal_body__3YST6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"save_name_input\":\"SaveConfigModal_save_name_input__321GR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about_text\":\"AboutModal_about_text__fPYs3\"};","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Option } from '../CategoryConfig';\nimport styles from './CategoryOption.module.scss';\n\ninterface CategoryOptionProps {\n\toption: Option;\n\teditable?: boolean;\n\tonUpdate?: (chagnges: Option) => void;\n\tonDelete?: () => void;\n}\n\ninterface CategoryOptionState {\n\teditable: boolean;\n}\n\nclass CategoryOption extends React.Component<CategoryOptionProps, CategoryOptionState> {\n\tstate: CategoryOptionState = {\n\t\teditable: !!this.props.editable,\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(styles.category_option, {\n\t\t\t\t\t[`${styles.deselected}`]: !this.props.option.selected,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<div className={classNames(styles.select_checkbox)}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={!!this.props.option.selected}\n\t\t\t\t\t\tonChange={(event) => this.handleSelectionUpdate(event.target.checked)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(styles.option_text)}\n\t\t\t\t\tonClick={() => this.setEditable(true)}\n\t\t\t\t\tonBlur={(event) => {\n\t\t\t\t\t\tthis.setEditable(false);\n\t\t\t\t\t\tthis.handleTextUpdate(event.target.innerText);\n\t\t\t\t\t}}\n\t\t\t\t\tcontentEditable={this.state.editable}\n\t\t\t\t\tsuppressContentEditableWarning={true}\n\t\t\t\t>\n\t\t\t\t\t{this.props.option.text}\n\t\t\t\t</div>\n\t\t\t\t<div className={classNames(styles.delete_button)} onClick={() => this.deleteOption()}>\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tsetEditable(editable: boolean): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\teditable,\n\t\t});\n\t}\n\n\thandleSelectionUpdate(selected: boolean): void {\n\t\tif (this.props.onUpdate)\n\t\t\tthis.props.onUpdate({\n\t\t\t\tselected,\n\t\t\t\ttext: this.props.option.text ?? '',\n\t\t\t});\n\t}\n\n\thandleTextUpdate(text: string): void {\n\t\tif (this.props.onUpdate)\n\t\t\tthis.props.onUpdate({\n\t\t\t\tselected: !!this.props.option.selected,\n\t\t\t\ttext,\n\t\t\t});\n\t}\n\n\tdeleteOption(): void {\n\t\tif (this.props.onDelete) this.props.onDelete();\n\t}\n}\n\nexport default CategoryOption;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'react-bootstrap';\nimport CategoryOption from './CategoryOption';\nimport { Category, Option } from '../CategoryConfig';\nimport classNames from 'classnames';\nimport styles from './CategoryOptionList.module.scss';\n\ninterface CategoryOptionListProps {\n\tname: string;\n\toptions: Option[];\n\tonUpdate?: (changes: Category) => void;\n\tonRemove?: () => void;\n}\n\nconst CategoryOptionList: React.FC<CategoryOptionListProps> = ({\n\tname,\n\toptions,\n\tonUpdate,\n\tonRemove,\n}) => {\n\tconst [titleEditable, setTitleEditable] = useState(false);\n\n\tconst updateName = (newName: string): void => {\n\t\tif (onUpdate)\n\t\t\tonUpdate({\n\t\t\t\tname: newName,\n\t\t\t\toptions,\n\t\t\t});\n\t};\n\n\tconst addOption = (): void => {\n\t\tconst updatedOptions = [...options];\n\t\tupdatedOptions.push({ text: '', selected: true });\n\t\tif (onUpdate)\n\t\t\tonUpdate({\n\t\t\t\tname,\n\t\t\t\toptions: updatedOptions,\n\t\t\t});\n\t};\n\n\tconst deleteOption = (index: number): void => {\n\t\tconst updatedOptions = [...options];\n\t\tupdatedOptions.splice(index, 1);\n\t\tif (onUpdate)\n\t\t\tonUpdate({\n\t\t\t\tname,\n\t\t\t\toptions: updatedOptions,\n\t\t\t});\n\t};\n\n\tconst updateOption = (changes: Option, index: number): void => {\n\t\tconst updatedOptions = [...options];\n\t\tupdatedOptions[index] = changes;\n\t\tif (onUpdate)\n\t\t\tonUpdate({\n\t\t\t\tname,\n\t\t\t\toptions: updatedOptions,\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className={classNames(styles.category_option_list)}>\n\t\t\t<div className={styles.title_bar}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(styles.title)}\n\t\t\t\t\tcontentEditable={titleEditable}\n\t\t\t\t\tsuppressContentEditableWarning={true}\n\t\t\t\t\tonDoubleClick={() => setTitleEditable(true)}\n\t\t\t\t\tonBlur={(event) => {\n\t\t\t\t\t\tsetTitleEditable(false);\n\t\t\t\t\t\tupdateName(event.target.innerText);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{name}\n\t\t\t\t</div>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\tclassName={styles.remove_category_btn}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (onRemove) onRemove();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className={classNames(styles.options_list)}>\n\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t<CategoryOption\n\t\t\t\t\t\tkey={`${option.text.substring(5)}_${index}`}\n\t\t\t\t\t\toption={option}\n\t\t\t\t\t\tonUpdate={(changes) => updateOption(changes, index)}\n\t\t\t\t\t\tonDelete={() => deleteOption(index)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\n\t\t\t\t<Button onClick={() => addOption()}>\n\t\t\t\t\tAdd Option <FontAwesomeIcon icon={faPlus} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CategoryOptionList;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport styles from './OpenConfigModal.module.scss';\n\nexport interface SavedConfigListProps {\n\tentryNames: string[];\n\tshow: boolean;\n\tonClose?: () => void;\n\tonOpen?: (entryName: string) => void;\n\tonDelete?: (entryName: string) => void;\n}\n\nconst OpenConfigModal: React.FC<SavedConfigListProps> = ({\n\tentryNames,\n\tshow,\n\tonOpen,\n\tonClose,\n\tonDelete,\n}) => {\n\tconst selectEntry = (entryName: string): void => {\n\t\tif (onOpen) onOpen(entryName);\n\t};\n\n\tconst deleteEntry = (entryName: string): void => {\n\t\tif (onDelete) onDelete(entryName);\n\t};\n\n\tconst closeModal = (): void => {\n\t\tif (onClose) onClose();\n\t};\n\n\treturn (\n\t\t<Modal show={show} onHide={() => closeModal()}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>Load Configuration</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body className={styles.modal_body}>\n\t\t\t\t<div className={styles.saved_config_list}>\n\t\t\t\t\t{entryNames.length > 0 ? (\n\t\t\t\t\t\tentryNames.map((name, index) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={`${name}_${index}`}\n\t\t\t\t\t\t\t\tclassName={styles.entry_row}\n\t\t\t\t\t\t\t\tonClick={() => selectEntry(name)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>{name}</div>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tdeleteEntry(name);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className={styles.no_config_text}>No Saved Configurations</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"secondary\" onClick={() => closeModal()}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default OpenConfigModal;\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport styles from './SaveConfigModal.module.scss';\n\nexport interface SaveConfigFormProps {\n\tshow: boolean;\n\tonSubmit?: (entryName: string) => void;\n\tonClose?: () => void;\n}\n\nconst SaveConfigModal: React.FC<SaveConfigFormProps> = ({ show, onSubmit, onClose }) => {\n\tconst [entryName, setEntryName] = useState(`random categories ${new Date().toISOString()}`);\n\n\tconst submitForm = (): void => {\n\t\tif (onSubmit) onSubmit(entryName);\n\t};\n\n\tconst closeModal = (): void => {\n\t\tif (onClose) onClose();\n\t};\n\n\treturn (\n\t\t<Modal show={show} onHide={() => closeModal}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>Save Configuration</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.save_name_input}\n\t\t\t\t\tonChange={(event) => setEntryName(event.target.value)}\n\t\t\t\t\tdefaultValue={entryName}\n\t\t\t\t/>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"secondary\" onClick={() => closeModal()}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={() => submitForm()}>\n\t\t\t\t\tSave Changes\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default SaveConfigModal;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport styles from './AboutModal.module.scss';\n\nexport interface AboutModalProps {\n\tshow: boolean;\n\tonClose: () => void;\n}\n\nconst AboutModal: React.FC<AboutModalProps> = ({ show, onClose }) => {\n\tconst closeModal = (): void => {\n\t\tif (onClose) onClose();\n\t};\n\n\treturn (\n\t\t<Modal show={show} onHide={() => closeModal()} centered size=\"sm\">\n\t\t\t<Modal.Body>\n\t\t\t\t<div className={styles.about_text}>\n\t\t\t\t\t<h2>Category Randomizer</h2>\n\t\t\t\t\t<p>Version: 1.0.0</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tView this project on{' '}\n\t\t\t\t\t\t<a href=\"https://github.com/ShiJBey/category-randomizer\" rel=\"noreferrer\">\n\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n};\n\nexport default AboutModal;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n// import styles from './HelpModal.module.scss';\n\nexport interface HelpModalProps {\n\tshow: boolean;\n\tonClose: () => void;\n}\n\nconst HelpModal: React.FC<HelpModalProps> = ({ show, onClose }) => {\n\tconst closeModal = (): void => {\n\t\tif (onClose) onClose();\n\t};\n\n\treturn (\n\t\t<Modal show={show} onHide={() => closeModal()}>\n\t\t\t<Modal.Body>\n\t\t\t\t<h2>Help</h2>\n\t\t\t\t<hr></hr>\n\t\t\t\t<h3>What is this?</h3>\n\t\t\t\t<p>\n\t\t\t\t\tThis is a simple application for creating random combinations of categories. You can\n\t\t\t\t\trandomize a single category at a time or all three categories at once. Users can\n\t\t\t\t\tadd/remove categories, as well as add/remove and select/deselect options within\n\t\t\t\t\tcategories.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tOptions that are deselected (not checked and greyed out), are not included when\n\t\t\t\t\trandomizing.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf you find a setup that you like, you can use the 'save' button to save it for later in\n\t\t\t\t\tthe browser's storage. You can then load the same setup at a later date, assuming you're\n\t\t\t\t\tusing the same web browser.\n\t\t\t\t</p>\n\t\t\t\t<h3>Troubleshooting</h3>\n\t\t\t\t<h4>Where are my saves?</h4>\n\t\t\t\t<p>\n\t\t\t\t\tChances are you're using a different device or browser from your last visit. Setting are\n\t\t\t\t\tsaved to the specific brower used during the last session.\n\t\t\t\t</p>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"secondary\" onClick={() => closeModal()}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default HelpModal;\n","import React from 'react';\nimport styles from './App.module.scss';\nimport sampleData from './assets/sample_categories.json';\nimport { Button, ButtonGroup, ButtonToolbar } from 'react-bootstrap';\nimport _ from 'lodash';\nimport CategoryOptionList from './components/CategoryOptionList';\nimport classNames from 'classnames';\nimport { CategoryConfig, Category } from './CategoryConfig';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaRandom,\n\tfaSave,\n\tfaFolderOpen,\n\tfaPlus,\n\tfaQuestion,\n\tfaInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport OpenConfigModal from './components/OpenConfigModal';\nimport SaveConfigModal from './components/SaveConfigModal';\nimport AboutModal from './components/AboutModal';\nimport HelpModal from './components/HelpModal';\n\n// If this changes then the app won't be able to find old entries\nconst SAVED_CONFIG_NAMES_KEY: string = 'savedConfigs';\n\n// const BLANK_CONFIG: CategoryConfig = {\n// \tformat: '2',\n// \tname: 'Testing',\n// \tcategories: [\n// \t\t{ name: 'colleges', options: [] },\n// \t\t{ name: 'rule', options: [] },\n// \t],\n// };\n\ninterface AppState {\n\tconfig: CategoryConfig;\n\tselections: string[];\n\tshowOpenModal: boolean;\n\tshowSaveModal: boolean;\n\tshowAboutModal: boolean;\n\tshowHelpModal: boolean;\n\tsavedConfigs: string[];\n}\n\nfunction sampleCategories(categories: Category[]): string[] {\n\treturn categories\n\t\t.map((category) => {\n\t\t\tconst selectedOptions = category.options.filter((option) => option.selected);\n\t\t\tconst selection = _.sample(selectedOptions);\n\t\t\tif (selection) {\n\t\t\t\treturn selection;\n\t\t\t} else {\n\t\t\t\treturn { text: '' };\n\t\t\t}\n\t\t})\n\t\t.map((selection) => selection.text);\n}\n\nclass App extends React.Component<{}, AppState> {\n\tstate: AppState = {\n\t\tconfig: sampleData,\n\t\tselections: sampleCategories(sampleData.categories),\n\t\tshowOpenModal: false,\n\t\tshowSaveModal: false,\n\t\tshowAboutModal: false,\n\t\tshowHelpModal: false,\n\t\tsavedConfigs: [],\n\t};\n\n\trender(): JSX.Element {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={classNames(styles.app)}>\n\t\t\t\t\t<div className={classNames(styles.toolbar)}>\n\t\t\t\t\t\t<h1>Category Randomizer</h1>\n\n\t\t\t\t\t\t<ButtonToolbar className=\"mb-3\">\n\t\t\t\t\t\t\t<ButtonGroup className=\"mr-2\" size=\"sm\">\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => this.showSaveConfigModal()}>\n\t\t\t\t\t\t\t\t\tSave <FontAwesomeIcon icon={faSave} />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => this.showOpenConfigModal()}>\n\t\t\t\t\t\t\t\t\tLoad <FontAwesomeIcon icon={faFolderOpen} />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t<ButtonGroup className=\"mr-2\" size=\"sm\">\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => this.showHelpModal()}>\n\t\t\t\t\t\t\t\t\tHelp <FontAwesomeIcon icon={faQuestion} />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={() => this.showAboutModal()}>\n\t\t\t\t\t\t\t\t\tAbout <FontAwesomeIcon icon={faInfoCircle} />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</ButtonToolbar>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classNames(`mb-3`, styles.randomize_all_btn)}\n\t\t\t\t\t\t\tonClick={() => this.randomizeAll()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className={classNames(styles.btn_label)}>Randomize All!</span>{' '}\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faRandom} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classNames(styles.categories)}>\n\t\t\t\t\t\t{this.state.config.categories.map((category, index) => (\n\t\t\t\t\t\t\t<div key={`${category.name}_${index}`} className={styles.category_column}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tclassName={classNames('mb-3', styles.randomize_btn)}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.randomize(index)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRandomize <FontAwesomeIcon icon={faRandom} />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className={classNames(styles.selection)}>{this.state.selections[index]}</div>\n\n\t\t\t\t\t\t\t\t<CategoryOptionList\n\t\t\t\t\t\t\t\t\tname={category.name}\n\t\t\t\t\t\t\t\t\toptions={category.options}\n\t\t\t\t\t\t\t\t\tonUpdate={(changes) => this.handleOptionsUpdate(index, changes)}\n\t\t\t\t\t\t\t\t\tonRemove={() => this.removeCategory(index)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<div className={styles.category_column}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t\t\tclassName={classNames('mb-3', styles.add_vategory_btn)}\n\t\t\t\t\t\t\t\t\tonClick={() => this.addCategory()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Category <FontAwesomeIcon icon={faPlus} />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<OpenConfigModal\n\t\t\t\t\tentryNames={this.state.savedConfigs}\n\t\t\t\t\tshow={this.state.showOpenModal}\n\t\t\t\t\tonDelete={(name) => this.deleteFromStorage(name)}\n\t\t\t\t\tonOpen={(name) => {\n\t\t\t\t\t\tconst config = this.loadFromStorage(name);\n\t\t\t\t\t\tif (config) {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\tshowOpenModal: false,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.hideOpenConfigModal();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => this.hideOpenConfigModal()}\n\t\t\t\t/>\n\n\t\t\t\t<SaveConfigModal\n\t\t\t\t\tshow={this.state.showSaveModal}\n\t\t\t\t\tonSubmit={(name) => {\n\t\t\t\t\t\tthis.saveToStorage(name, this.state.config);\n\t\t\t\t\t\tthis.hideSaveConfigModal();\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => this.hideSaveConfigModal()}\n\t\t\t\t/>\n\n\t\t\t\t<AboutModal show={this.state.showAboutModal} onClose={() => this.hideAboutModal()} />\n\n\t\t\t\t<HelpModal show={this.state.showHelpModal} onClose={() => this.hideHelpModal()} />\n\t\t\t</>\n\t\t);\n\t}\n\n\tsetCategoryConfig(config: CategoryConfig): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tconfig: {\n\t\t\t\t...config,\n\t\t\t},\n\t\t});\n\t\tconsole.log(config);\n\t}\n\n\tgetSavedEntryNames(): string[] {\n\t\tconst entryNameRecord = window.localStorage.getItem(SAVED_CONFIG_NAMES_KEY);\n\t\tif (entryNameRecord) {\n\t\t\treturn JSON.parse(entryNameRecord);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tloadFromStorage(entryName: string): CategoryConfig | null {\n\t\tconst entry = window.localStorage.getItem(entryName);\n\t\tif (entry) {\n\t\t\tconst data: CategoryConfig = JSON.parse(entry);\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconsole.error(`No saved entry with name '${entryName}'`);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsaveToStorage(entryName: string, config: CategoryConfig) {\n\t\t// Save the config data to storage\n\t\twindow.localStorage.setItem(entryName, JSON.stringify(config));\n\t\t// save the entry name under a known key\n\t\tconst savedEntryNames = this.getSavedEntryNames();\n\t\tif (!savedEntryNames.includes(entryName)) savedEntryNames.push(entryName);\n\t\twindow.localStorage.setItem(SAVED_CONFIG_NAMES_KEY, JSON.stringify(savedEntryNames));\n\t}\n\n\tdeleteFromStorage(entryName: string): void {\n\t\t// Remove data\n\t\twindow.localStorage.removeItem(entryName);\n\t\t// Remove setup name\n\t\tconst updatedConfigNames = this.getSavedEntryNames().filter((name) => name !== entryName);\n\t\twindow.localStorage.setItem(SAVED_CONFIG_NAMES_KEY, JSON.stringify(updatedConfigNames));\n\t}\n\n\tshowSaveConfigModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowSaveModal: true,\n\t\t});\n\t}\n\n\thideSaveConfigModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowSaveModal: false,\n\t\t});\n\t}\n\n\tshowOpenConfigModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowOpenModal: true,\n\t\t\tsavedConfigs: this.getSavedEntryNames(),\n\t\t});\n\t}\n\n\thideOpenConfigModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowOpenModal: false,\n\t\t});\n\t}\n\n\tshowAboutModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowAboutModal: true,\n\t\t});\n\t}\n\n\thideAboutModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowAboutModal: false,\n\t\t});\n\t}\n\n\tshowHelpModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowHelpModal: true,\n\t\t});\n\t}\n\n\thideHelpModal(): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tshowHelpModal: false,\n\t\t});\n\t}\n\n\tsetSelections(selections: string[]): void {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tselections,\n\t\t});\n\t}\n\n\trandomizeAll(): void {\n\t\tconst updatedSelections = sampleCategories(this.state.config.categories);\n\t\tthis.setSelections(updatedSelections);\n\t}\n\n\trandomize(index: number): void {\n\t\tconst selectedOptions = this.state.config.categories[index].options.filter(\n\t\t\t(option) => option.selected\n\t\t);\n\t\tconst newSelection = _.sample(selectedOptions)?.text ?? '';\n\t\tconst updatedSelections = [...this.state.selections];\n\t\tupdatedSelections[index] = newSelection;\n\t\tthis.setSelections(updatedSelections);\n\t}\n\n\taddCategory(): void {\n\t\tconst updatedCategories = [...this.state.config.categories];\n\t\tupdatedCategories.push({ name: 'new category', options: [] });\n\t\tconst updatedSelections = [...this.state.selections];\n\t\tupdatedSelections.push('');\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tselections: updatedSelections,\n\t\t\tconfig: {\n\t\t\t\t...this.state.config,\n\t\t\t\tcategories: updatedCategories,\n\t\t\t},\n\t\t});\n\t}\n\n\tremoveCategory(index: number): void {\n\t\tconst updatedCategories = [...this.state.config.categories];\n\t\tupdatedCategories.splice(index, 1);\n\t\tconst updatedSelections = [...this.state.selections];\n\t\tupdatedSelections.splice(index, 1);\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tselections: updatedSelections,\n\t\t\tconfig: {\n\t\t\t\t...this.state.config,\n\t\t\t\tcategories: updatedCategories,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleOptionsUpdate(index: number, changes: Category): void {\n\t\tconst updatedCategories = [...this.state.config.categories];\n\t\tupdatedCategories[index] = changes;\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tconfig: {\n\t\t\t\t...this.state.config,\n\t\t\t\tcategories: updatedCategories,\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}